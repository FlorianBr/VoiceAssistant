# Assist for Home Assistant
# Board: ESP32-S3 DevKit
# Microphone: INMP441
# Speaker: MAX98357
# Outputs: LED Strip
# Portal WAVs: https://theportalwiki.com/wiki/Turret_voice_lines

esphome:
  name: assistcube
  comment: Voice Assist Cube on ESP32-S3
  friendly_name: VA Cube
  name_add_mac_suffix: false
  min_version: 2025.2.0
  on_boot:
    priority: -100
    then:
      - lambda: id(sys_phase) = ${state_starting};
      - script.execute: control_ui
      - media_player.volume_set: 60%

esp32:
  board: esp32-s3-devkitc-1
  variant: ESP32S3
  flash_size: 16MB
  framework:
    type: esp-idf
    version: latest
    sdkconfig_options:
      CONFIG_ESP32_S3_BOX_BOARD: "y"
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB:      "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B:  "y"
      CONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM: "16"
      CONFIG_ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM: "512"
      CONFIG_TCPIP_RECVMBOX_SIZE: "512"
      CONFIG_TCP_SND_BUF_DEFAULT: "65535"
      CONFIG_TCP_WND_DEFAULT: "512000"
      CONFIG_TCP_RECVMBOX_SIZE: "512"

psram:
  mode: octal
  speed: 80MHz

api:
  services:
    - service: start_va
      then:
        - voice_assistant.start
    - service: stop_va
      then:
        - voice_assistant.stop

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  # power_save_mode: none
  enable_on_boot: True
  fast_connect: True
  output_power: 8.5

web_server:
  port: 80
  include_internal: true

logger:
  hardware_uart: USB_SERIAL_JTAG

substitutions:
  state_starting: '0'
  state_idle: '1'
  state_wakeword: '2'
  state_vastart: '3'
  state_listening: '4'
  state_thinking: '5'
  state_replying: '6'
  state_error: '11'
  state_muted: '12'

globals:
  - id: sys_phase
    type: int
    restore_value: no
    initial_value: ${state_starting}

text_sensor:
  - platform: template
    name: "Current state"
    update_interval: 500ms
    lambda: !lambda |-
        switch(id(sys_phase)) {
          default:
            return {"Unknown"};
            break;
          case ${state_starting}:
            return {"Starting"};
            break;
          case ${state_idle}:
            return {"Idle"};
            break;
          case ${state_wakeword}:
            return {"WakeWord"};
            break;
          case ${state_vastart}:
            return {"VA Start"};
            break;
          case ${state_listening}:
            return {"Listening"};
            break;
          case ${state_thinking}:
            return {"Thinking"};
            break;
          case ${state_replying}:
            return {"Replying"};
            break;
          case ${state_error}:
            return {"Error"};
            break;
          case ${state_muted}:
            return {"Muted"};
            break;
        }

############################ Buttons / Switches

switch:
  - platform: template
    name: Mute
    id: enable_mute
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - script.execute: turn_off_wake_word
    on_turn_off:
      - script.execute: turn_on_wake_word
  - platform: restart
    id: trigger_restart
    name: "Restart"

############################ Lights

spi:
  mosi_pin: 4
  clk_pin: 5

light:
  - platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin: GPIO48
    num_leds: 1
    chipset: SK6812
    name: "On Board LED"
    effects:
      - pulse:
          name: "Fast Pulse"
          transition_length: 250ms
          update_interval: 250ms
          min_brightness: 0%
          max_brightness: 50%
      - pulse:
          name: "Slow Pulse"
          transition_length: 500ms
          update_interval: 500ms
          min_brightness: 0%
          max_brightness: 50%
  - platform: spi_led_strip
    num_leds: 9
    id: led_strip
    name: "RGB LED Strip"
    data_rate: 200kHz
    effects:
      - addressable_color_wipe:
          name: "Rotating Red"
          colors:
            - red: 100%
              green: 0%
              blue: 0%
              num_leds: 1
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 7
          add_led_interval: 75ms
          reverse: false
      - pulse:
          name: "Fast Pulse"
          transition_length: 250ms
          update_interval: 250ms
          min_brightness: 0%
          max_brightness: 50%
      - pulse:
          name: "Slow Pulse"
          transition_length: 500ms
          update_interval: 500ms
          min_brightness: 0%
          max_brightness: 50%
      - pulse:
          name: "Super Slow Pulse"
          transition_length: 2s
          update_interval: 2s
          min_brightness: 0%
          max_brightness: 50%

############################ Audio

i2s_audio:
  - id: i2s_in
    i2s_lrclk_pin: GPIO20   # INMP441 WS
    i2s_bclk_pin: GPIO21    # INMP441 SCK
  - id: i2s_out
    i2s_lrclk_pin: GPIO46   # MAX98357 LRC
    i2s_bclk_pin: GPIO9     # MAX98357 BCK

microphone:
  - platform: i2s_audio
    id: microphone_id
    adc_type: external
    i2s_din_pin: GPIO19     # INMP441 DO
    channel: left
    sample_rate: 16000
    bits_per_sample: 16bit
    pdm: false
    i2s_audio_id: i2s_in

speaker:
  - platform: i2s_audio
    id: speaker_id
    i2s_audio_id: i2s_out
    dac_type: external
    i2s_dout_pin: GPIO10    # MAX98357 DIN
    sample_rate: 48000
    bits_per_sample: 16bit
    channel: left
    buffer_duration: 100ms

  - platform: mixer
    id: mixer_id
    output_speaker: speaker_id
    source_speakers:
      - id: announce_mixer_in
      - id: media_mixer_in
  - platform: resampler
    id: media_resampling_in
    output_speaker: media_mixer_in
  - platform: resampler
    id: announce_resampling_in
    output_speaker: announce_mixer_in

media_player:
  - platform: speaker
    name: "Media Player"
    id: media_player_id
    announcement_pipeline:
      speaker: announce_resampling_in
      num_channels: 1
    media_pipeline:
      speaker: media_resampling_in
      num_channels: 1
    files:
      - id: sound_hello
        file: https://i1.theportalwiki.net/img/2/2d/Turret_sp_sabotage_factory_good_pass01.wav
      - id: sound_goodbye
        file: https://i1.theportalwiki.net/img/e/e9/Turret_turret_retire_1.wav
      - id: sound_failure
        file: https://i1.theportalwiki.net/img/e/ec/Turret_turretlightbridgeblock04.wav
      - id: sound_alarm
        file: https://i1.theportalwiki.net/img/d/d3/Turret_alarm.wav

############################ Voice Assistant

micro_wake_word:
  vad:
  models:
    model: hey_jarvis
  on_wake_word_detected:
    then:
      - lambda: id(sys_phase) = ${state_wakeword};
      - script.execute: control_ui
      - media_player.speaker.play_on_device_media_file:
          media_file: sound_alarm
          announcement: true
      - wait_until:
          media_player.is_idle:
      - voice_assistant.start:

voice_assistant:
  id: voice_assist
  microphone: microphone_id
  media_player: media_player_id
  # All settings currently broken: https://github.com/esphome/issues/issues/6599
  # noise_suppression_level: 2    # TODO: Tune
  # auto_gain: 31dBFS             # TODO: Tune
  # volume_multiplier: 32.0       # TODO: Tune
  volume_multiplier: 128
  use_wake_word: false
  conversation_timeout: 60s

  on_error:
    - lambda: id(sys_phase) = ${state_error};
  on_client_connected:
    - media_player.speaker.play_on_device_media_file:
        media_file: sound_hello
        announcement: true
    - script.execute: turn_on_wake_word
  on_client_disconnected:
    - media_player.speaker.play_on_device_media_file:
        media_file: sound_goodbye
        announcement: true
    - script.execute: turn_off_wake_word
    - lambda: id(sys_phase) = ${state_error};
  on_listening:
    - lambda: id(sys_phase) = ${state_listening};
    - script.execute: control_ui
  on_tts_start:
    - lambda: id(sys_phase) = ${state_replying};
    - script.execute: control_ui
  on_start:
    - lambda: id(sys_phase) = ${state_vastart};
    - script.execute: control_ui
  on_end:
    - wait_until:
          media_player.is_idle:
    - delay: 250ms
    - script.execute: turn_on_wake_word
  # on_intent_start:
  # on_intent_stop:
  # on_listening:
  # on_wake_word_detected:
  # on_stt_end:
  # on_stt_vad_start:
  # on_stt_vad_end:
  # on_tts_end:
  # on_tts_stream_start:
  # on_tts_stream_end:
  # on_idle:


############################ Scripts

script:
  - id: control_ui
    then:
      lambda: !lambda |-
          switch(id(sys_phase)) {
            default:
            case ${state_starting}:
              id(led_strip).turn_on().set_effect("Rotating Red").perform();
              break;
            case ${state_idle}:
              id(led_strip).turn_off().perform();
              break;
            case ${state_wakeword}:
              id(led_strip).turn_on().set_rgb(0, 1, 0).set_brightness(1.0).set_effect("none").perform();
              break;
            case ${state_vastart}:
              id(led_strip).turn_on().set_rgb(1, 0.5, 0).set_brightness(1.0).set_effect("none").perform();
              break;
            case ${state_listening}:
              id(led_strip).turn_on().set_rgb(0, 1, 0).set_brightness(1.0).set_effect("Fast Pulse").perform();
              break;
            case ${state_thinking}:
              id(led_strip).turn_on().set_rgb(1, 0.5, 0).set_brightness(1.0).set_effect("Fast Pulse").perform();
              break;
            case ${state_replying}:
              id(led_strip).turn_on().set_rgb(0, 0, 1).set_brightness(1.0).set_effect("none").perform();
              break;
            case ${state_error}:
              id(led_strip).turn_on().set_rgb(1, 0, 0).set_brightness(0.2).set_effect("Fast Pulse").perform();
              break;
            case ${state_muted}:
              id(led_strip).turn_on().set_rgb(1, 0, 0).set_brightness(0.2).set_effect("Slow Pulse").perform();
              break;
          }

  - id: turn_on_wake_word
    then:
      - voice_assistant.stop:
      - if:
          condition:
            media_player.is_playing:
          then:
            - media_player.stop:
      - micro_wake_word.start:
      - lambda: id(sys_phase) = ${state_idle};
      - script.execute: control_ui

  - id: turn_off_wake_word
    then:
      - micro_wake_word.stop:
      - voice_assistant.stop:
      - lambda: id(sys_phase) = ${state_muted};
      - script.execute: control_ui

############################ Scripts

esp32_ble_tracker:
  scan_parameters:
    active: true

bluetooth_proxy:
  active: true
